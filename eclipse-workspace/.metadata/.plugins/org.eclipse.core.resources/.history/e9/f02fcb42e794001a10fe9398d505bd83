package com.example.moviecatalogue;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class MovieController {
	
	@Autowired
	private UserRepository userRepository;
	
	private static Map<String, User> userRepo = new HashMap<>();
	   static {
	      User honey = new User("John","john@gmail.com",1111);
	      
	      userRepo.put(honey.getName(), honey);
	      
	      	User almond = new User("Almond","almond@gmail.com",22222);
	      
	      userRepo.put(almond.getName(), almond);
	   }
	
	@PostMapping(path="/create",consumes="application/json",produces="application/json")
	public ResponseEntity<ResponseModel> createUser() {
		return ResponseEntity.status(HttpStatus.OK).body(new ResponseModel("User created successfully"));
	}
	
	@GetMapping(path="/find",consumes="application/json",produces="application/json")
	public ResponseEntity<Object> findUser() {
		return ResponseEntity.status(HttpStatus.OK).body(userRepo.values());
	}
	
	@GetMapping(path="/getUsers")
	public List<User> getUsers(){
		return userRepository.findAll();
	}
	
	@GetMapping("/users/{name}")
	public ResponseEntity<User> getUserById(@PAthVariable(value="name") String userName) throws ResourceNotFoundEception{
		User user=userRepository.findByName(userName).orElseThrow(() -> new ResourceNotFoundEception("User not found "+ userName));
		return ResponseEntity.ok().body(user);
	}
	
	@GetMapping("/employees/{id}")
    public ResponseEntity < Employee > getEmployeeById(@PathVariable(value = "id") Long employeeId)
    throws ResourceNotFoundException {
        Employee employee = employeeRepository.findById(employeeId)
            .orElseThrow(() -> new ResourceNotFoundException("Employee not found for this id :: " + employeeId));
        return ResponseEntity.ok().body(employee);
    }

}
